---
title: "How do we treat categorical features for our data science project?"
date: "2024-09-12"
author: Rafiq Islam
categories: [Statistics, Data Science, Data Engineering, Machine Learning, Artificial Intelligence]
citation: true
search: true
image: sm.png
lightbox: true
listing: 
    contents: "/../../posts"
    max-items: 3
    type: grid
    categories: false
    date-format: full
    fields: [image, date, title, author, reading-time]
---   

<p align="center">
  <img src="/_assets/images/uc.jpeg" alt="Post under construction" width="400" height="400"/>
</p>

## Introduction  
<p style="text-align: justify"> <img src="/posts/dataengineering/sm.png" align="right" width="400" height= "450" style="align-right; margin-left:20px"/>
    Suppose we are working on a data science project and the data contains both contineous and categorical variables. For example, we want to build a predictive model for a life insurance company. The model will predict the annual company spending on individuals depending on their age, bmi, sex, smoking habit, number of children, and region in the US where the belong. So here, our target variable is a contineous variable and the feature variables contain both contineous and categorical variables.<br>
    <br>
    To understand how important each feature is, there are many possible ways. For example, when we do the exploratory data analysis (EDA) we can do some plotting to see how each feature inteacts with the target variable, or maybe calculating correlations of the features and target variables. However, when the feature is contineous it is not a big issue to calculate the correlation matrix. But when the feature is categorical or ordinal, for example, in this predictive modeling case, how do we know if the number of children or smoking habit have impact on insurance charges? Plotting `boxplot` or `countplot` from the `seaborn` or any other library may help, give some primary idea. But how do we quantify the correlations?<br>
    <br>
    Here comes the statistical method one-way ***Analysis of Variances (ANOVA)*** among many other alternatives. Machine libraries like `scipy` has built-in functions that can compute the ANOVA's for each categorical feature. We will see the implementation of this at the end of this post. This blog post is about the simple explanation of the mathematics behind the ANOVA method.
</p>   

## ANOVA  

This is the 5 random sample [data]([www.kaggle.com/datasets/mirichoi0218/insurance/data](https://www.kaggle.com/datasets/harshsingh2209/medical-insurance-payout)){target="_blank" style="text-decoration:none"} that we are talking about. We will use this data to explain the mathematical formulation of the model.  
```{python}
import pandas as pd
data = pd.read_csv('insurance.csv')
print(data.sample(5, random_state=111))
```  

We will explain the method using the feature `children`.  

```{python}
child = data.children.value_counts().sort_index()
c0=data[data['children']==0].charges.values.tolist()
c1=data[data['children']==1].charges.values.tolist()
c2=data[data['children']==2].charges.values.tolist()
c3=data[data['children']==3].charges.values.tolist()
c4=data[data['children']==4].charges.values.tolist()
c5=data[data['children']==5].charges.values.tolist()
```  



| Children 0 | Children 1 | Children 2 | Children 3 | Children 4 | Children 5 |  
| -----------| ---------- | ---------- | ---------- | ---------- | ---------- |  
| `{python} c0[:6]` | `{python} c1[:4]` | `{python} c2[:3]` | `{python} c3[:2]` | `{python} c4[:3]` | `{python} c5[:2]` |  
| Total `{python} child[0]` | Total `{python} child[1]` | Total `{python} child[2]` | Total `{python} child[3]` | Total `{python} child[4]` | Total `{python} child[5]` |  


A one-way analysis of variance is a method to compare $k$ homogenous groups when the experiment has $n_i$ response values for each each group $i$. Therefore, total data $n=\sum_{i} n_i$ and $y_{ij}$ represent the $j$th observation of the $i$th group. For our example above, we have $\sum_{i=1}^{6}n_i=$(`{python} child[0]`+`{python} child[1]`+`{python} child[2]`+`{python} child[3]`+`{python} child[4]`+`{python} child[5]`)= `{python} child[0]+child[1]+child[2]+child[3]+child[4]+child[5]` and $y_{12}=$ `{python} c0[1]` meaning, group 1 and second element.  

Now let's define 
$$
\mu_i = \frac{1}{n_i}\sum_{j=1}^{n_i}\frac{y_{ij}}{n_i};\hspace{4mm}\text{for } i=1,2,\cdots, 6
$$  

Since all the groups are coming from the same sample/population, we must assume that they all have common variance. This $\textcolor{red}{\text{homogeneity assumption is crucial}}$ for ANOVA analysis. So, irrespective of their group assignment, each $y_{ij}\sim (\mu_i, \sigma^2)$  

### What does one-sided ANOVA do?  

<p style="text-align: justify">
    The main purpose of one-sided ANOVA is to act as a judge like in a court house. It assumes that there is no variation in any group. All group has the same mean. So it sets a null hypthesis and declares that there is no difference in the groups whereas the alternative is set to the opposite. Let's see what happens to our data  
</p>

```{python}
import numpy as np 
```  


| $\mu$ | Values |  
| ----- | ------ |  
| $\mu_1$ | `{python} round(np.mean(c0),2)` |  
| $\mu_2$ | `{python} round(np.mean(c1),2)` |  
| $\mu_3$ | `{python} round(np.mean(c2),2)` |  
| $\mu_4$ | `{python} round(np.mean(c3),2)` |  
| $\mu_5$ | `{python} round(np.mean(c4),2)` |  
| $\mu_6$ | `{python} round(np.mean(c5),2)` | 




**Share on**  

::::{.columns}
:::{.column width="33%"}
<a href="https://www.facebook.com/sharer.php?u=https://mrislambd.github.io/dsandml/posts/dataengineering/" target="_blank" style="color:#1877F2; text-decoration: none;">
 
{{< fa brands facebook size=3x >}}
</a>
 
:::
 
:::{.column width="33%"}
<a href="https://www.linkedin.com/sharing/share-offsite/?url=https://mrislambd.github.io/dsandml/posts/dataengineering/" target="_blank" style="color:#0077B5; text-decoration: none;">
 
{{< fa brands linkedin size=3x >}}
</a>
 
:::
 
:::{.column width="33%"}
<a href="https://www.twitter.com/intent/tweet?url=https://mrislambd.github.io/dsandml/posts/dataengineering/" target="_blank" style="color:#1DA1F2; text-decoration: none;">
 
{{< fa brands twitter size=3x >}}
</a>
 
:::
::::
 
<script src="https://giscus.app/client.js"
        data-repo="mrislambd/mrislambd.github.io" 
        data-repo-id="R_kgDOMV8crA"
        data-category="Announcements"
        data-category-id="DIC_kwDOMV8crM4CjbQW"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="light"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script>
 
<div id="fb-root"></div>
<script async defer crossorigin="anonymous"
 src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v20.0"></script>
<div class="fb-comments" data-href="https://mrislambd.github.io/dsandml/posts/dataengineering/" data-width="750" data-numposts="5"></div>



**You may also like**